<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{42C2D460-5393-31F4-8D93-2D0E12CF97C5}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>TowerDefence</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\Projects_Cpp\TowerDefence\build\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TowerDefence.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TowerDefence</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Projects_Cpp\TowerDefence\build\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TowerDefence.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TowerDefence</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\Projects_Cpp\TowerDefence\build\bin\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">TowerDefence.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">TowerDefence</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\Projects_Cpp\TowerDefence\build\bin\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">TowerDefence.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">TowerDefence</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_gfx/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying resource files to output directory				</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory E:/Projects_Cpp/TowerDefence/res E:/Projects_Cpp/TowerDefence/build/bin/Debug/res
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2/lib/x64/SDL2.dll E:/Projects_Cpp/TowerDefence/build/bin/Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/lib/x64/SDL2_image.dll E:/Projects_Cpp/TowerDefence/build/bin/Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/lib/x64/SDL2_mixer.dll E:/Projects_Cpp/TowerDefence/build/bin/Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/lib/x64/SDL2_ttf.dll E:/Projects_Cpp/TowerDefence/build/bin/Debug
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2main.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\lib\x64\SDL2_gfx.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\lib\x64\SDL2_image.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\lib\x64\SDL2_mixer.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\lib\x64\SDL2_ttf.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>libcmt.lib;libcmtd.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Projects_Cpp/TowerDefence/build/lib/Debug/TowerDefence.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Projects_Cpp/TowerDefence/build/bin/Debug/TowerDefence.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_gfx/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DisableSpecificWarnings>4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying resource files to output directory				</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory E:/Projects_Cpp/TowerDefence/res E:/Projects_Cpp/TowerDefence/build/bin/Release/res
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2/lib/x64/SDL2.dll E:/Projects_Cpp/TowerDefence/build/bin/Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/lib/x64/SDL2_image.dll E:/Projects_Cpp/TowerDefence/build/bin/Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/lib/x64/SDL2_mixer.dll E:/Projects_Cpp/TowerDefence/build/bin/Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/lib/x64/SDL2_ttf.dll E:/Projects_Cpp/TowerDefence/build/bin/Release
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2main.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\lib\x64\SDL2_gfx.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\lib\x64\SDL2_image.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\lib\x64\SDL2_mixer.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\lib\x64\SDL2_ttf.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>libcmt.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Projects_Cpp/TowerDefence/build/lib/Release/TowerDefence.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Projects_Cpp/TowerDefence/build/bin/Release/TowerDefence.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_gfx/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DisableSpecificWarnings>4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying resource files to output directory				</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory E:/Projects_Cpp/TowerDefence/res E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel/res
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2/lib/x64/SDL2.dll E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/lib/x64/SDL2_image.dll E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/lib/x64/SDL2_mixer.dll E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/lib/x64/SDL2_ttf.dll E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2main.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\lib\x64\SDL2_gfx.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\lib\x64\SDL2_image.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\lib\x64\SDL2_mixer.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\lib\x64\SDL2_ttf.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>libcmt.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Projects_Cpp/TowerDefence/build/lib/MinSizeRel/TowerDefence.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Projects_Cpp/TowerDefence/build/bin/MinSizeRel/TowerDefence.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_gfx/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/include" /external:I "E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <LanguageStandard_C>stdc11</LanguageStandard_C>
      <MinimalRebuild></MinimalRebuild>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>E:\Projects_Cpp\TowerDefence\third_party\cJSON\include;E:\Projects_Cpp\TowerDefence\src\basic;E:\Projects_Cpp\TowerDefence\src\bullet;E:\Projects_Cpp\TowerDefence\src\enemy;E:\Projects_Cpp\TowerDefence\src\manager;E:\Projects_Cpp\TowerDefence\src\tower;E:\Projects_Cpp\TowerDefence\src\ui;E:\Projects_Cpp\TowerDefence\src\ui\panel;E:\Projects_Cpp\TowerDefence\src\util;E:\Projects_Cpp\TowerDefence\third_party\SDL2\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\include;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying resource files to output directory				</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_directory E:/Projects_Cpp/TowerDefence/res E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo/res
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2/lib/x64/SDL2.dll E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_image/lib/x64/SDL2_image.dll E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_mixer/lib/x64/SDL2_mixer.dll E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different E:/Projects_Cpp/TowerDefence/third_party/SDL2_ttf/lib/x64/SDL2_ttf.dll E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2main.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_gfx\lib\x64\SDL2_gfx.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_image\lib\x64\SDL2_image.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_mixer\lib\x64\SDL2_mixer.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2_ttf\lib\x64\SDL2_ttf.lib;E:\Projects_Cpp\TowerDefence\third_party\SDL2\lib\x64\SDL2.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>libcmt.lib;%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>E:/Projects_Cpp/TowerDefence/build/lib/RelWithDebInfo/TowerDefence.lib</ImportLibrary>
      <ProgramDataBaseFile>E:/Projects_Cpp/TowerDefence/build/bin/RelWithDebInfo/TowerDefence.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="E:\Projects_Cpp\TowerDefence\src\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule E:/Projects_Cpp/TowerDefence/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Projects_Cpp/TowerDefence -BE:/Projects_Cpp/TowerDefence/build --check-stamp-file E:/Projects_Cpp/TowerDefence/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">E:\Projects_Cpp\TowerDefence\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule E:/Projects_Cpp/TowerDefence/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Projects_Cpp/TowerDefence -BE:/Projects_Cpp/TowerDefence/build --check-stamp-file E:/Projects_Cpp/TowerDefence/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">E:\Projects_Cpp\TowerDefence\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule E:/Projects_Cpp/TowerDefence/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Projects_Cpp/TowerDefence -BE:/Projects_Cpp/TowerDefence/build --check-stamp-file E:/Projects_Cpp/TowerDefence/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">E:\Projects_Cpp\TowerDefence\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule E:/Projects_Cpp/TowerDefence/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SE:/Projects_Cpp/TowerDefence -BE:/Projects_Cpp/TowerDefence/build --check-stamp-file E:/Projects_Cpp/TowerDefence/build/src/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">E:\Projects_Cpp\TowerDefence\build\src\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="E:\Projects_Cpp\TowerDefence\src\main.cpp" />
    <ClCompile Include="E:\Projects_Cpp\TowerDefence\third_party\cJSON\cJSON.c">
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='Release|x64'">MultiThreadedDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">MultiThreadedDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">MultiThreadedDLL</RuntimeLibrary>
    </ClCompile>
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\coin_prop.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\facing.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\map.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\route.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\tile.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\basic\wave.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\bullet\arrow_bullet.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\bullet\axe_bullet.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\bullet\bullet.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\bullet\bullet_type.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\bullet\shell_bullet.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\enemy_type.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\goblin_enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\goblin_priest_enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\king_slime_enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\skeleton_enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\enemy\slime_enemy.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\bullet_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\coin_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\config_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\enemy_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\game_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\home_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\player_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\resource_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\tower_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\manager\wave_manager.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\tower\archer_tower.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\tower\axeman_tower.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\tower\gunner_tower.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\tower\tower.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\tower\tower_type.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\ui\banner.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\ui\status_bar.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\ui\panel\panel.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\ui\panel\place_panel.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\ui\panel\upgrade_panel.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\util\animation.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\util\timer.hpp" />
    <ClInclude Include="E:\Projects_Cpp\TowerDefence\src\util\vector2.hpp" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="E:\Projects_Cpp\TowerDefence\build\ZERO_CHECK.vcxproj">
      <Project>{5216AC2B-BD5E-33C1-81E6-C12B9F533EC3}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>